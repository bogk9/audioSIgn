{"ast":null,"code":"var _jsxFileName = \"/Users/boguskania/apki/trng_full/client/src/components/SignPanel.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport { Box } from './styled';\nimport { Input } from './styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSign } from '../redux/appActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = styled.button`\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: palevioletred;\n  margin: 0 1em;\n  padding: 0.25em 1em;\n`;\n_c = Button;\nexport const SignPanel = () => {\n  _s();\n\n  let [formKey, setFormKey] = useState(\"\");\n  let [formMessage, setFormMessage] = useState(\"\");\n  let appState = useSelector(state => state.app);\n  let dispatch = useDispatch();\n\n  const onSubmit = () => {\n    fetch(`http://localhost:8080/signMessage?key=${encodeURIComponent(formKey)}&message=${encodeURIComponent(formMessage)}`).then(data => data.json()).then(data => dispatch(setSign(data.sign))).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [\"Hello, world Let's sign! key:\", /*#__PURE__*/_jsxDEV(Input, {\n      value: appState.privateKey,\n      onChange: e => setFormKey(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), \"message:\", /*#__PURE__*/_jsxDEV(Input, {\n      value: formMessage,\n      onChange: e => setFormMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onSubmit,\n      children: \"check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      style: {\n        maxWidth: 300,\n        wordBreak: \"break-all\"\n      },\n      value: response.sign\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignPanel, \"5fAjkB5YqKdfqc898YFjCD5MNbg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c2 = SignPanel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"SignPanel\");","map":{"version":3,"names":["styled","useState","Box","Input","useDispatch","useSelector","setSign","Button","button","SignPanel","formKey","setFormKey","formMessage","setFormMessage","appState","state","app","dispatch","onSubmit","fetch","encodeURIComponent","then","data","json","sign","catch","error","console","log","privateKey","e","target","value","maxWidth","wordBreak","response"],"sources":["/Users/boguskania/apki/trng_full/client/src/components/SignPanel.js"],"sourcesContent":["import styled from 'styled-components'\nimport { useState } from 'react'\nimport { Box } from './styled'\nimport { Input } from './styled'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setSign } from '../redux/appActions'\n\n\n\n\nconst Button = styled.button`\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: palevioletred;\n  margin: 0 1em;\n  padding: 0.25em 1em;\n`\n\n\nexport const SignPanel = () => {\n    let [formKey, setFormKey] = useState(\"\");\n    let [formMessage, setFormMessage] = useState(\"\");\n\n    let appState = useSelector(state => state.app);\n    let dispatch = useDispatch();\n    \n\n    const onSubmit = () => {\n        fetch(`http://localhost:8080/signMessage?key=${encodeURIComponent(formKey)}&message=${encodeURIComponent(formMessage)}`)\n        .then(data => data.json())\n        .then(data => dispatch(setSign(data.sign)))\n        .catch(error => console.log(error))\n    }\n\n    return(\n        <Box>\n            Hello, world Let's sign! \n\n            key:\n            <Input value={appState.privateKey} onChange={(e) => setFormKey(e.target.value)}></Input>\n\n            message:\n            <Input value={formMessage} onChange={(e) => setFormMessage(e.target.value)}></Input>\n\n            <Button onClick={onSubmit}>check</Button>\n            <br/>\n\n            <textarea style={{maxWidth: 300, wordBreak: \"break-all\"}} value={response.sign}>\n            </textarea>\n            \n        </Box>\n    )\n}"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,QAAoB,UAApB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,qBAAxB;;AAKA,MAAMC,MAAM,GAAGP,MAAM,CAACQ,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,M;AASN,OAAO,MAAME,SAAS,GAAG,MAAM;EAAA;;EAC3B,IAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAApC;EACA,IAAI,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA5C;EAEA,IAAIa,QAAQ,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,GAAhB,CAA1B;EACA,IAAIC,QAAQ,GAAGb,WAAW,EAA1B;;EAGA,MAAMc,QAAQ,GAAG,MAAM;IACnBC,KAAK,CAAE,yCAAwCC,kBAAkB,CAACV,OAAD,CAAU,YAAWU,kBAAkB,CAACR,WAAD,CAAc,EAAjH,CAAL,CACCS,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMC,IAAI,IAAIL,QAAQ,CAACX,OAAO,CAACgB,IAAI,CAACE,IAAN,CAAR,CAFtB,EAGCC,KAHD,CAGOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHhB;EAIH,CALD;;EAOA,oBACI,QAAC,GAAD;IAAA,yDAII,QAAC,KAAD;MAAO,KAAK,EAAEZ,QAAQ,CAACe,UAAvB;MAAmC,QAAQ,EAAGC,CAAD,IAAOnB,UAAU,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV;IAA9D;MAAA;MAAA;MAAA;IAAA,QAJJ,2BAOI,QAAC,KAAD;MAAO,KAAK,EAAEpB,WAAd;MAA2B,QAAQ,EAAGkB,CAAD,IAAOjB,cAAc,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;IAA1D;MAAA;MAAA;MAAA;IAAA,QAPJ,eASI,QAAC,MAAD;MAAQ,OAAO,EAAEd,QAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATJ,eAUI;MAAA;MAAA;MAAA;IAAA,QAVJ,eAYI;MAAU,KAAK,EAAE;QAACe,QAAQ,EAAE,GAAX;QAAgBC,SAAS,EAAE;MAA3B,CAAjB;MAA0D,KAAK,EAAEC,QAAQ,CAACX;IAA1E;MAAA;MAAA;MAAA;IAAA,QAZJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH,CAjCM;;GAAMf,S;UAIMJ,W,EACAD,W;;;MALNK,S"},"metadata":{},"sourceType":"module"}